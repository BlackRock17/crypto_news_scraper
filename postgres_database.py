import psycopg2
import psycopg2.extras
import json
from datetime import datetime
import os


class PostgreSQLDatabaseManager:
        def __init__(self):
            print("üêò –°–≤—ä—Ä–∑–≤–∞–Ω–µ —Å PostgreSQL...")

            # –ö–æ–Ω—Ñ–∏–≥—É—Ä–∞—Ü–∏—è –∑–∞ –±–∞–∑–∞—Ç–∞
            self.db_config = {
                'host': 'localhost',
                'port': 5432,
                'database': 'crypto_news',
                'user': 'crypto_user',
                'password': 'password'
            }

            # –¢–µ—Å—Ç–≤–∞–º–µ –≤—Ä—ä–∑–∫–∞—Ç–∞
            self._test_connection()
            self.init_database()
            print("‚úÖ PostgreSQL –≥–æ—Ç–æ–≤!")

        def _test_connection(self):
            """–ü—Ä–æ–≤–µ—Ä—è–≤–∞ –¥–∞–ª–∏ –º–æ–∂–µ –¥–∞ —Å–µ —Å–≤—ä—Ä–∂–µ —Å PostgreSQL"""
            try:
                conn = psycopg2.connect(**self.db_config)
                conn.close()
                print("‚úÖ –í—Ä—ä–∑–∫–∞ —Å PostgreSQL —É—Å–ø–µ—à–Ω–∞")
            except psycopg2.Error as e:
                print(f"‚ùå –ì—Ä–µ—à–∫–∞ –ø—Ä–∏ —Å–≤—ä—Ä–∑–≤–∞–Ω–µ: {e}")
                raise

        def get_connection(self):
            """–í—Ä—ä—â–∞ –Ω–æ–≤–∞ –≤—Ä—ä–∑–∫–∞ –∫—ä–º –±–∞–∑–∞—Ç–∞"""
            return psycopg2.connect(**self.db_config)

        def init_database(self):
            """–°—ä–∑–¥–∞–≤–∞ —Ç–∞–±–ª–∏—Ü–∏—Ç–µ –∑–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω–∏ –ê (—Å—Ç–∞—Ç–∏–∏ –∑–∞ scraping)"""
            with self.get_connection() as conn:
                with conn.cursor() as cursor:
                    # –¢–∞–±–ª–∏—Ü–∞ –∑–∞ —Å—Ç–∞—Ç–∏–∏
                    cursor.execute('''
                        CREATE TABLE IF NOT EXISTS articles (
                            id SERIAL PRIMARY KEY,
                            url TEXT UNIQUE NOT NULL,
                            title TEXT NOT NULL,
                            content TEXT NOT NULL,
                            author TEXT,
                            published_date TEXT,
                            scraped_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                            content_length INTEGER,
                            is_analyzed BOOLEAN DEFAULT FALSE
                        )
                    ''')

                    # –¢–∞–±–ª–∏—Ü–∞ –∑–∞ scraped URLs (–∑–∞ –¥–∞ –Ω–µ –ø–æ–≤—Ç–∞—Ä—è–º–µ)
                    cursor.execute('''
                        CREATE TABLE IF NOT EXISTS scraped_urls (
                            id SERIAL PRIMARY KEY,
                            url TEXT UNIQUE NOT NULL,
                            first_scraped_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                            last_seen_at TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
                            scrape_count INTEGER DEFAULT 1
                        )
                    ''')

                    # –ò–Ω–¥–µ–∫—Å–∏ –∑–∞ –ø–æ-–±—ä—Ä–∑–∏ –∑–∞—è–≤–∫–∏
                    cursor.execute('CREATE INDEX IF NOT EXISTS idx_articles_url ON articles(url)')
                    cursor.execute('CREATE INDEX IF NOT EXISTS idx_articles_is_analyzed ON articles(is_analyzed)')
                    cursor.execute('CREATE INDEX IF NOT EXISTS idx_scraped_urls_url ON scraped_urls(url)')

                    print("‚úÖ –¢–∞–±–ª–∏—Ü–∏ –∑–∞ –±–∞–∑–∞ –¥–∞–Ω–Ω–∏ –ê —Å—ä–∑–¥–∞–¥–µ–Ω–∏")
                    conn.commit()
